//
//  <%= @name %>Coordinator.swift
//  <%= @xcodeModuleName %>
//
//  Created by Andy Bell on <%= Time.now.strftime("%m/%d/%Y") %>.
//  Copyright Â© <%= Time.now.strftime("%Y") %> <%= @companyName %>. All rights reserved.
//

import UIKit

class <%= @name %>Coordinator: Coordinator {

    var <%= @nameDecapitalized %>ViewController: <%= @name %>ViewController?
    var parentViewController: UIViewController?

    init(parentViewController: UIViewController?) {
        self.parentViewController = parentViewController
    }

    func setupWithData(data: Any?) {

        let storyboard = UIStoryboard(name: "<%= @name %>Storyboard", bundle: nil)
        <%= @nameDecapitalized %>ViewController = storyboard.instantiateViewController(withIdentifier: "<%= @name %>ViewController") as? <%= @name %>ViewController

        guard let <%= @nameDecapitalized %>ViewController = <%= @nameDecapitalized %>ViewController else { return }

        let viewModel =  <%= @name %>ViewModel()
        viewModel.coordinatorDelegate = self
        <%= @nameDecapitalized %>ViewController.viewModel = viewModel

//        // If this module uses Interactor for Network calls
//        guard let networkService = Api.make() else {
//           print("[Error] Unable to create networkService.")
//            return
//        }
//        viewModel.interactor = <%= @name %>InteractorDefault(networkService: networkService)

    }

}

extension <%= @name %>Coordinator: <%= @name %>ViewModelCoordinatorDelegate {

    func viewModelDidSelectData(data: Any?) {
        // handle onward process here with type cast (if required)
    }

}
